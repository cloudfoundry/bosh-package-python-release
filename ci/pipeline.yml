---
jobs:
- name: bump
  serial: true
  plan:
  - in_parallel:
    - get: python-3.10
      trigger: true
    - get: python-3.11
      trigger: true
    - get: python-3.12
      trigger: true
    - get: python-release
    - get: stemcell
    - get: semver
      params:
        bump: minor
    - get: bosh-cli-image
    - get: bosh-warden-cpi-image
    - get: bosh-shared-ci
  - task: bump
    file: python-release/ci/tasks/bump.yml
    image: bosh-cli-image
    params:
      PRIVATE_YML: |
        ---
        blobstore:
          provider: gcs
          options:
            credentials_source: static
            json_key: '((cloud-foundry-gcp-credentials))'
  - task: test
    file: python-release/ci/tasks/test.yml
    privileged: true
    image: bosh-warden-cpi-image
  - task: finalize
    file: bosh-shared-ci/tasks/release/create-final-release.yml
    input_mapping:
      release_repo: python-release
      version: semver
    params:
      GIT_USER_NAME: CI Bot
      GIT_USER_EMAIL: bots@cloudfoundry.org
      PRIVATE_YML: |
        ---
        blobstore:
          provider: gcs
          options:
            credentials_source: static
            json_key: '((cloud-foundry-gcp-credentials))'
  - in_parallel:
    - put: semver
      params:
        file: semver/version
    - put: python-release
      params:
        rebase: true
        repository: release_repo
        tag: release_metadata/tag-name

resources:
- name: bosh-shared-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-shared-ci.git
    private_key: ((github_deploy_key_bosh-shared-ci.private_key))

- name: python-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-package-python-release.git
    branch: main
    private_key: ((github_deploy_key_python-release.private_key))

- name: bosh-cli-image
  type: registry-image
  source:
    repository: bosh/cli
    username: ((docker.username))
    password: ((docker.password))

- name: bosh-warden-cpi-image
  type: registry-image
  source:
    repository: bosh/warden-cpi
    username: ((docker.username))
    password: ((docker.password))

- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-jammy-go_agent

- name: semver
  type: semver
  source:
    bucket: bosh-packages-python-release
    key: version
    initial_version: 0.1.0
    driver: gcs
    json_key: ((cloud-foundry-gcp-credentials))

- name: python-3.10
  type: dynamic-metalink
  source:
    version: 3.10.x
    version_check: |
      curl -s 'https://endoflife.date/api/python.json' | \
        jq -r '.[].latest'
    metalink_get: |
      export name="Python-${version}.tgz"
      export url="https://www.python.org/ftp/python/${version}/Python-${version}.tgz"
      export size=$( curl --silent --head "$url" | grep Content-Length | awk '{ print $2 }' | tr -cd '[:digit:]' )
      jq -n '
      {
       "files": [
        {
         "name": env.name,
         "urls": [ { "url": env.url } ],
         "size": env.size | tonumber
        }
       ]
      }'
  
- name: python-3.11
  type: dynamic-metalink
  source:
    version: 3.11.x
    version_check: |
      curl -s 'https://endoflife.date/api/python.json' | \
        jq -r '.[].latest'
    metalink_get: |
      export name="Python-${version}.tgz"
      export url="https://www.python.org/ftp/python/${version}/Python-${version}.tgz"
      export size=$( curl --silent --head "$url" | grep Content-Length | awk '{ print $2 }' | tr -cd '[:digit:]' )
      jq -n '
      {
       "files": [
        {
         "name": env.name,
         "urls": [ { "url": env.url } ],
         "size": env.size | tonumber
        }
       ]
      }'

- name: python-3.12
  type: dynamic-metalink
  source:
    version: 3.12.x
    version_check: |
      curl -s 'https://endoflife.date/api/python.json' | \
        jq -r '.[].latest'
    metalink_get: |
      export name="Python-${version}.tgz"
      export url="https://www.python.org/ftp/python/${version}/Python-${version}.tgz"
      export size=$( curl --silent --head "$url" | grep Content-Length | awk '{ print $2 }' | tr -cd '[:digit:]' )
      jq -n '
      {
       "files": [
        {
         "name": env.name,
         "urls": [ { "url": env.url } ],
         "size": env.size | tonumber
        }
       ]
      }'

resource_types:
- name: dynamic-metalink
  type: docker-image
  source:
    repository: dpb587/dynamic-metalink-resource

- name: semver
  type: docker-image
  source:
    repository: concourse/semver-resource
    tag: 1.6